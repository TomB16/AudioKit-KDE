#!/bin/bash

#
# This file is part of audiokit-kde.
# Copyright (C) 2025 Tom Brown
#
# audiokit-kde is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# audiokit-kde is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
#


# masthead

source bashdev-app

APP_NAME=$(basename "$0")
APP_VERSION="0.0.1"
APP_AUTHOR="Tom Brown"
APP_YEAR="2025"
APP_LICENSE="MIT"
APP_DESC="Convert audio file to flac"

app::masthead "$APP_NAME" "$APP_VERSION" "$APP_AUTHOR" "$APP_YEAR" "$APP_LICENSE" "$APP_DESC"
app::processLockSpin $(basename "$0") 301 4 600


# initialize vars

QUIET=0
RESULT=0
INPUT_FILE=""

# Parse flags and arguments

for arg in "$@"; do
    case "$arg" in
        -q|--quiet)
            QUIET=1
            ;;
        *)
            if [ -z "$INPUT_FILE" ]; then   INPUT_FILE="$arg";      fi
            ;;
    esac
done


# Ensure input file exists

if [[ "$RESULT" -eq 0  && ! -f "$INPUT_FILE" ]];                   then    RESULT=2;       fi
if [ "$RESULT" -eq 0 ] && ! command -v ffprobe >/dev/null 2>&1;    then    RESULT=4;       fi
if [ "$RESULT" -eq 0 ] && ! command -v ffmpeg >/dev/null 2>&1;     then    RESULT=5;       fi


# Get codec name using ffprobe

codec=$(ffprobe -v error -select_streams a:0 -show_entries stream=codec_name \
         -of default=noprint_wrappers=1:nokey=1 "$INPUT_FILE")

# Define supported lossless codecs

case "$codec" in
    flac|alac|pcm_s16le|pcm_s24le|pcm_f32le|pcm_s32le|ape|wavpack|wmalossless)
        [ "$QUIET" -eq 0 ] && echo "Detected lossless codec: $codec"
        ;;
    *)
        RESULT=10;
        ;;
esac


# Generate output filename

output_file="${INPUT_FILE%.*}.flac"

# Convert using ffmpeg

if [ "$RESULT" -eq 0 ];    then

    [ "$QUIET" -eq 0 ] && echo "Converting '$INPUT_FILE' to '$output_file'..."
    SECONDS=0
    systemd-inhibit --why="Converting audio" nice -n 19 ffmpeg -hide_banner -loglevel error -y -i "$INPUT_FILE" -c:a flac -compression_level 12 "$output_file"
    DURATION=$SECONDS
    if [ $? -eq 0 ]; then   STATUS="OK";    else    STATUS="FAIL";      RESULT=1;       fi

fi


# note status

case "$RESULT" in

    0|1)
        FORMATTED_TIME=$(printf '%02d:%02d:%02d' $((DURATION/3600)) $(((DURATION%3600)/60)) $((DURATION%60)))
        MESSAGE="[$STATUS] input='$INPUT_FILE'  output='$output_file'  processing time=$FORMATTED_TIME"
        ;;
    2)
        MESSAGE="[FAIL] file not found"
        ;;
    4)
        MESSAGE="[FAIL] command ffprobe not available"
        ;;
    5)
        MESSAGE="[FAIL] command ffmpeg not available"
        ;;
    10)
        MESSAGE="[FAIL] source file $INPUT_FILE uses unsupported codec $codec"
        ;;

esac


[ "$QUIET" -eq 0 ] && echo "$MESSAGE"
logger --tag audiokit-2flac "$MESSAGE"


# clean up

app::processUnlock
